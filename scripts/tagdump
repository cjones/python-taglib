#!/usr/bin/env python
#
# Copyright (c) 2009, Chris Jones
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

from optparse import OptionParser
import sys
import os

from taglib import __version__, tagopen, InvalidMedia

def find(path):
    if os.path.isdir(path):
        for basedir, subdirs, filenames in os.walk(path):
            try:
                subdirs.remove('.svn')
            except ValueError:
                pass
            for filename in filenames:
                yield os.path.join(basedir, filename)
    elif os.path.isfile(path):
        yield path


def main(args=None):
    optparse = OptionParser('%prog <dir | file ...>', version=__version__,
                            description='Display media metadata')
    args = optparse.parse_args(args)[1]
    if not args:
        optparse.print_help()
        return 1
    try:
        for path in args:
            for file in find(path):
                try:
                    tagopen(file).display(filename=os.path.basename(file))
                    print
                except InvalidMedia:
                    pass
                except Exception, error:
                    print >> sys.stderr, '%s: %s' % (file, error)
    except KeyboardInterrupt:
        return 2
    return 0

if __name__ == '__main__':
    sys.exit(main())
